{"version":3,"sources":["images/home.svg","images/users.svg","images/briefcase.svg","images/zap.svg","utils/constans.js","utils/quotesApi.js","images/avatar.jpg","images/logo.svg","components/Header.js","images/bar-chart-2.svg","images/trending-up.svg","components/Nav/Category.js","components/Nav/Categories.js","components/Nav/Nav.js","images/Line chart.svg","components/Main/Task.js","components/Main/TaskList.js","components/Main/SuccessInWeek.js","components/Main/QuotesContainer.js","images/clock.svg","images/calendar.svg","components/Main/CurrentDate.js","components/Popups/FormErrors.js","components/Main/UserProfile.js","components/Main/Main.js","components/Popups/Popup.js","components/Popups/AddTaskPopup.js","components/Popups/AddCategoryPopup.js","components/ProtectedRoute.js","components/Sign/SignPage.js","components/Sign/SignIn.js","components/Sign/SignUp.js","components/App.js","reportWebVitals.js","index.js"],"names":["prependCategory","title","categoryCode","image","home","_id","family","job","sport","prependTasks","category","isComplete","date","priority","isDeleted","monthList","qutesApi","option","this","_baseUrl","baseUrl","fetch","headers","then","res","_getResponseData","ok","json","Promise","reject","status","Header","props","className","isLoggedIn","exact","to","src","logo","alt","onClick","onOpenAddTaskPopup","type","isDarkTheme","onThemeToggle","avatar","Category","activeClassName","Categories","categories","map","onOpenAddCategoryPopup","Nav","barChart","trendingUp","Task","task","onToggleCompleteStatus","onTaskDelete","TaskList","path","tasks","SuccessInWeek","isThemeDark","length","count","forEach","getCompletedTasks","getDeletedTasks","QuotesContainer","quote","body","CurrentDate","React","useState","seconds","setSeconds","minutes","setMinutes","hours","setHours","day","setDay","month","setMonth","year","setYear","milliseconds","setMilliseconds","useEffect","requestAnimationFrame","Date","getMilliseconds","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","clock","calendar","FormErrors","errorsMassage","isValid","UserProfile","name","setName","isNameValid","setIsNameValid","nameErrorMassage","setNameErrorMassage","email","setEmail","isEmailValid","setIsEmailValid","emailErrorMassage","setEmailErrorMassage","handleNameValidity","input","validity","valid","validationMessage","handleEmailValidity","htmlFor","minLength","required","value","onChange","e","target","Main","onToggleTaskCompleteStatus","lineChart","Popup","template","setTemplate","classList","contains","onClose","isOpen","popupName","isAddTask","id","disabled","formName","onSubmit","noValidate","children","AddTaskPopup","taskName","setTaskName","taskCategory","setTaskCategory","isCategoryValid","setIsCategoryValid","taskPriority","setTaskPriority","isPriorityValid","setIsPriorityValid","taskDate","setTaskDate","isDateValid","setIsDateValid","isFormValid","setIsFormValid","handleNameValid","handleCategoryValid","handlePriorityValid","handleDateValid","preventDefault","onTaskAdd","tasksLength","maxLength","AddCategoryPopup","toLowerCase","onCategoryAdd","categoryLength","ProtectedRoute","Component","component","SignPage","password","setPassword","isPasswordValid","setIsPasswordValid","passwordErrorMassage","setPasswordErrorMassage","handlePasswordValidity","placeholder","buttonText","SignIn","SignUp","App","setCategories","setTasks","setQuote","isAddTaskOpen","setIsAddTaskOpen","isAddCategoryOpen","setIsCategoryTaskOpen","setIsDarkTheme","setIsLoggedIn","history","useHistory","getQuoteOfDay","data","catch","err","console","error","closeAllPopups","closeByEscape","key","document","addEventListener","removeEventListener","localStorage","getItem","add","remove","push","handleLoggedIn","setItem","toggle","taskId","newTask","newCategory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd835b92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home.2cbc7f51.svg\";","export default __webpack_public_path__ + \"static/media/users.b516306e.svg\";","export default __webpack_public_path__ + \"static/media/briefcase.a9517622.svg\";","export default __webpack_public_path__ + \"static/media/zap.468c7cf4.svg\";","import home from '../images/home.svg'\r\nimport family from '../images/users.svg'\r\nimport job from '../images/briefcase.svg'\r\nimport sport from '../images/zap.svg'\r\n\r\nexport const prependCategory = [\r\n  {\r\n    title: 'Дом',\r\n    categoryCode: 'Дом',\r\n    image: home,\r\n    _id: 0\r\n  },\r\n  {\r\n    title: 'Семья',\r\n    categoryCode: 'Семья',\r\n    image: family,\r\n    _id: 1\r\n  },\r\n  {\r\n    title: 'Работа',\r\n    categoryCode: 'Работа',\r\n    image: job,\r\n    _id: 2\r\n  },\r\n  {\r\n    title: 'Спорт',\r\n    categoryCode: 'Спорт',\r\n    image: sport,\r\n    _id: 3\r\n  },\r\n];\r\n\r\nexport const prependTasks = [\r\n  {\r\n    title: 'test0',\r\n    category: 'Дом',\r\n    isComplete: false,\r\n    date: 0,\r\n    priority: 'p1',\r\n    isDeleted: false,\r\n    _id: 0\r\n  },\r\n  {\r\n    title: 'test1',\r\n    category: 'Дом',\r\n    isComplete: true,\r\n    date: 0,\r\n    priority: 'p1',\r\n    isDeleted: false,\r\n    _id: 1\r\n  },\r\n  {\r\n    title: 'test2',\r\n    category: 'Дом',\r\n    isComplete: false,\r\n    date: 0,\r\n    priority: 'p1',\r\n    isDeleted: false,\r\n    _id: 2\r\n  },\r\n  {\r\n    title: 'test3',\r\n    category: 'Спорт',\r\n    isComplete: false,\r\n    date: 0,\r\n    priority: 'p1',\r\n    isDeleted: false,\r\n    _id: 3\r\n  },\r\n  {\r\n    title: 'test4',\r\n    category: 'Работа',\r\n    isComplete: false,\r\n    date: 0,\r\n    priority: 'p1',\r\n    isDeleted: false,\r\n    _id: 4\r\n  },\r\n  {\r\n    title: 'test5',\r\n    category: 'Семья',\r\n    isComplete: false,\r\n    date: 0,\r\n    priority: 'p1',\r\n    isDeleted: false,\r\n    _id: 5\r\n  },\r\n  {\r\n    title: 'test6',\r\n    category: 'Семья',\r\n    isComplete: false,\r\n    date: 0,\r\n    priority: 'p1',\r\n    isDeleted: true,\r\n    _id: 6\r\n  },\r\n]\r\n\r\nexport const monthList = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря',\r\n]","class Quotes {\r\n  constructor(option) {\r\n    this._baseUrl = option.baseUrl;\r\n  }\r\n\r\n  getQuoteOfDay() {\r\n    return fetch(`${this._baseUrl}/qotd`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    })\r\n        .then((res) => {\r\n          return this._getResponseData(res)\r\n        })\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json()\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n  }\r\n}\r\n\r\nexport const qutesApi = new Quotes({\r\n  baseUrl: 'https://favqs.com/api/',\r\n})","export default __webpack_public_path__ + \"static/media/avatar.32ba381a.jpg\";","export default __webpack_public_path__ + \"static/media/logo.ac7dc901.svg\";","import React from 'react'\r\nimport avatar from \"../images/avatar.jpg\";\r\nimport logo from \"../images/logo.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n      <header className=\"header root__header\">\r\n        {props.isLoggedIn ||\r\n        <NavLink exact to={'/'} className={'logo'}>\r\n          <img src={logo} alt=\"Логотип\" className=\"logo__image\"/>\r\n          <h1 className=\"logo__name\">Tasks Book</h1>\r\n        </NavLink>\r\n        }\r\n        {!props.isLoggedIn ||\r\n        <>\r\n          <button onClick={props.onOpenAddTaskPopup} className={`header__add-button button`}>Новая задача</button>\r\n          <button type='button'\r\n                  className={`header__theme-button ${props.isDarkTheme && 'header__theme-button_theme_dark'}`}\r\n                  onClick={props.onThemeToggle}/>\r\n          <div className=\"user\">\r\n            <p className={`user__greetings ${props.isDarkTheme && 'user__greetings_theme_dark'}`}>Хорошего дня, <span\r\n                className={`user__greetings ${props.isDarkTheme && 'user__greetings_theme_dark'} user__greetings_span`}>username</span>\r\n            </p>\r\n            <img src={avatar} alt=\"Ваш аватар\" className=\"user__avatar\"/>\r\n            <button className={`user__menu ${props.isDarkTheme && 'user__menu_theme_dark'}`}/>\r\n          </div>\r\n        </>\r\n        }\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/bar-chart-2.d2260903.svg\";","export default __webpack_public_path__ + \"static/media/trending-up.82e04518.svg\";","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Category(props) {\r\n  return (\r\n      <li className={`container__item container__nav-item cursor-pointer}`}>\r\n        <NavLink to={`/${props.categoryCode}`} className={'container__item-link'} activeClassName={'container__item_active'}>\r\n          <img src={props.image} alt={props.title} className={`container__item-image ${props.isDarkTheme && 'container__item-image_theme_dark'}`}/>\r\n          <p className={`container__item-name container__item-name_font-size_l ${props.isDarkTheme && 'container__item-name_theme_dark'}`}>{props.title}</p>\r\n        </NavLink>\r\n      </li>\r\n  );\r\n}\r\n\r\nexport default Category","import React from 'react';\r\nimport Category from \"./Category\";\r\n\r\nfunction Categories(props) {\r\n    return (\r\n      <article className=\"nav-bar__container container\">\r\n        <h2 className=\"container__title container__title_font-size-m\">Категории</h2>\r\n        <ul className=\"container__list list category__list\">\r\n          {props.categories.map(category => {\r\n            return <Category\r\n                key={category._id}\r\n                title={category.title}\r\n                categoryCode={category.categoryCode}\r\n                image={category.image}\r\n                isDarkTheme={props.isDarkTheme}\r\n            />\r\n          })}\r\n        </ul>\r\n        <button onClick={props.onOpenAddCategoryPopup} className={`container__add-button ${props.isDarkTheme && 'container__add-button_theme_dark'}`}>Добавить</button>\r\n      </article>\r\n  );\r\n}\r\n\r\nexport default Categories","import React from 'react'\r\nimport logo from \"../../images/logo.svg\";\r\nimport barChart from \"../../images/bar-chart-2.svg\";\r\nimport trendingUp from \"../../images/trending-up.svg\";\r\nimport Categories from \"./Categories\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n      <nav className={`nav-bar root__nav-bar ${props.isDarkTheme && 'nav-bar_theme_dark'} ${props.isLoggedIn || 'nav-bar_disable'}`}>\r\n        <NavLink exact to={'/'} className={'logo nav-bar__logo'}>\r\n          <img src={logo} alt=\"Логотип\" className=\"logo__image\"/>\r\n          <h1 className=\"logo__name\">Tasks Book</h1>\r\n        </NavLink>\r\n        <Categories\r\n            onOpenAddCategoryPopup={props.onOpenAddCategoryPopup}\r\n            categories={props.categories}\r\n            isDarkTheme={props.isDarkTheme}\r\n        />\r\n        <article className=\"nav-bar__container container\">\r\n          <h2 className=\"container__title container__title_font-size-m\">Данные</h2>\r\n          <ul className=\"container__list list\">\r\n            <li className=\"container__item cursor-pointer\">\r\n              <img src={barChart} alt=\"\" className={`container__item-image ${props.isDarkTheme && 'container__item-image_theme_dark'}`}/>\r\n              <p className={`container__item-name ${props.isDarkTheme && 'container__item-name_theme_dark'} container__item-name_font-size_l`}>Статистика</p>\r\n            </li>\r\n            <li className=\"container__item cursor-pointer\">\r\n              <img src={trendingUp} alt=\"\" className={`container__item-image ${props.isDarkTheme && 'container__item-image_theme_dark'}`}/>\r\n              <p className={`container__item-name ${props.isDarkTheme && 'container__item-name_theme_dark'} container__item-name_font-size_l`}>Сравнить</p>\r\n            </li>\r\n          </ul>\r\n        </article>\r\n      </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","export default __webpack_public_path__ + \"static/media/Line chart.14186107.svg\";","import React from 'react';\r\n\r\nfunction Task({task, ...props}) {\r\n  const handleCheckBoxClick = () => {\r\n    props.onToggleCompleteStatus(task._id)\r\n  }\r\n\r\n  const handleDeleteClick = () => {\r\n    props.onTaskDelete(task._id)\r\n  }\r\n  return (\r\n      <li className={`task__item ${props.isDarkTheme && 'task__item_theme_dark'}`}>\r\n        <button className={`task__check ${task.isComplete && 'task__check_completed'}`}\r\n                type=\"button\"\r\n                onClick={handleCheckBoxClick}\r\n        />\r\n        <p className={`task__name ${task.isComplete && 'task__name_completed'} ${props.isDarkTheme && 'task__name_theme_dark'}`}>{task.title}</p>\r\n        <div className=\"task__manager\">\r\n          <button className=\"task__editor\" type=\"button\"/>\r\n          <button className=\"task__deleter\" type=\"button\" onClick={handleDeleteClick}/>\r\n        </div>\r\n      </li>\r\n  );\r\n}\r\n\r\nexport default Task","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Task from \"./Task\";\r\n\r\nfunction TaskList(props) {\r\n  return (\r\n      <Route path={`/${props.category}`}>\r\n        <article className={`container ${props.isDarkTheme && 'container_theme_dark'} main__container todo-list`}>\r\n          <div className=\"container__title-container\">\r\n            <h2 className=\"container__title container__title_font-size-s\">Активные задачи</h2>\r\n            <button className={`container__function-button ${props.isDarkTheme && 'container__function-button_theme_dark'}`}/>\r\n          </div>\r\n          <ul className=\"list task__list task__list_uncompleted\">\r\n            {props.tasks.map(task => {\r\n              if (task.category === props.category && task.isComplete === false && task.isDeleted === false) {\r\n                return <Task key={task._id}\r\n                             task={task}\r\n                             onToggleCompleteStatus={props.onToggleCompleteStatus}\r\n                             onTaskDelete={props.onTaskDelete}\r\n                             isDarkTheme={props.isDarkTheme}\r\n                />\r\n              }\r\n            })}\r\n          </ul>\r\n          <div className=\"container__title-container\">\r\n            <h2 className=\"container__title container__title_font-size-s\">Завершенные задачи</h2>\r\n            <button className={`container__function-button ${props.isDarkTheme && 'container__function-button_theme_dark'}`}/>\r\n          </div>\r\n          <ul className=\"list task__list task__list_completed\">\r\n            {props.tasks.map(task => {\r\n              if (task.category === props.category && task.isComplete === true && task.isDeleted === false) {\r\n                return <Task\r\n                    key={task._id}\r\n                    task={task}\r\n                    onToggleCompleteStatus={props.onToggleCompleteStatus}\r\n                    onTaskDelete={props.onTaskDelete}\r\n                    isDarkTheme={props.isDarkTheme}\r\n                />\r\n              }\r\n            })}\r\n          </ul>\r\n        </article>\r\n      </Route>\r\n  );\r\n}\r\n\r\nexport default TaskList","import React from 'react';\r\n\r\nfunction SuccessInWeek(props) {\r\n\r\n  const getCompletedTasks = () => {\r\n    let count = 0;\r\n    props.tasks.forEach(task => {\r\n      if (task.isComplete === true) {\r\n        count++\r\n      }\r\n    })\r\n    return count\r\n  }\r\n\r\n  const getDeletedTasks = () => {\r\n    let count = 0;\r\n    props.tasks.forEach(task => {\r\n      if (task.isDeleted === true) {\r\n        count++\r\n      }\r\n    })\r\n    return count\r\n  }\r\n\r\n  return (\r\n      <article className={`container ${props.isThemeDark && 'container_theme_dark'} main__container`}>\r\n        <div className=\"container__title-container\">\r\n          <h2 className=\"container__title container__title_font-size-s\">Успехи за неделю</h2>\r\n          <button className={`container__function-button ${props.isThemeDark && 'container__function-button_theme_dark'}`} type=\"button\"/>\r\n        </div>\r\n        <ul className=\"list container__list list_flex_row\">\r\n          <li className=\"container__item container__item_flex_column\">\r\n            <p className={`container__item-name ${props.isThemeDark && 'container__item-name_theme_dark'} container__item-name_font-size_m`}>Создано</p>\r\n            <div className=\"bubble\">\r\n              <h3 className=\"bubble__title\">{props.tasks.length}</h3>\r\n              <p className={`bubble__name ${props.isThemeDark && 'bubble__name_theme_dark'}`}>Задач</p>\r\n            </div>\r\n          </li>\r\n          <li className=\"container__item container__item_flex_column\">\r\n            <p className={`container__item-name ${props.isThemeDark && 'container__item-name_theme_dark'} container__item-name_font-size_m`}>Завершено</p>\r\n            <div className=\"bubble\">\r\n              <h3 className=\"bubble__title\">{getCompletedTasks()}</h3>\r\n              <p className={`bubble__name ${props.isThemeDark && 'bubble__name_theme_dark'}`}>Задач</p>\r\n            </div>\r\n          </li>\r\n          <li className=\"container__item container__item_flex_column\">\r\n            <p className={`container__item-name ${props.isThemeDark && 'container__item-name_theme_dark'} container__item-name_font-size_m`}>Удалено</p>\r\n            <div className=\"bubble\">\r\n              <h3 className=\"bubble__title\">{getDeletedTasks()}</h3>\r\n              <p className={`bubble__name ${props.isThemeDark && 'bubble__name_theme_dark'}`}>Задач</p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </article>\r\n  );\r\n}\r\n\r\nexport default SuccessInWeek;","import React from 'react';\r\n\r\nfunction QuotesContainer(props) {\r\n  return (\r\n      <article className={`container ${props.isDarkTheme && 'container_theme_dark'} main__container`}>\r\n        <h2 className=\"container__title container__title_font-size-s\">Цитата дня</h2>\r\n        <div className=\"fact\">\r\n          <p className={`container__paragraph ${props.isDarkTheme && 'container__paragraph_theme_dark'}`}>{props.quote.body}</p>\r\n        </div>\r\n      </article>\r\n  );\r\n}\r\n\r\nexport default QuotesContainer;","export default __webpack_public_path__ + \"static/media/clock.a97d525b.svg\";","export default __webpack_public_path__ + \"static/media/calendar.7481ca4a.svg\";","import React from 'react';\r\nimport clock from \"../../images/clock.svg\";\r\nimport calendar from \"../../images/calendar.svg\";\r\nimport { monthList } from \"../../utils/constans\";\r\n\r\nfunction CurrentDate(props) {\r\n  const [seconds, setSeconds] = React.useState(0);\r\n  const [minutes, setMinutes] = React.useState(0)\r\n  const [hours, setHours] = React.useState(0);\r\n  const [day, setDay] = React.useState(0);\r\n  const [month, setMonth] = React.useState('');\r\n  const [year, setYear] = React.useState(0);\r\n  const [milliseconds, setMilliseconds] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    requestAnimationFrame(() => {\r\n      const date = new Date();\r\n      setMilliseconds(date.getMilliseconds());\r\n      setSeconds(date.getSeconds());\r\n      setMinutes(date.getMinutes());\r\n      setHours(date.getHours());\r\n      setDay(date.getDate());\r\n      setMonth(monthList[date.getMonth()]);\r\n      setYear(date.getFullYear());\r\n    });\r\n  }, [milliseconds]);\r\n\r\n  return (\r\n      <article className={`container ${props.isDarkTheme && 'container_theme_dark'} main__container`}>\r\n        <h2 className=\"container__title container__title_font-size-s\">Такс такс такс</h2>\r\n        <div className=\"date\">\r\n          <ul className=\"list container__list list_flex_row\">\r\n            <li className=\"container__item container__item_flex_column\">\r\n              <p className={`date__name ${props.isDarkTheme && 'date__name_theme_dark'}`}>На часах у нас</p>\r\n              <div className=\"date__types\">\r\n                <img src={clock} alt=\"часы\" className={`date__type-image ${props.isDarkTheme && 'date__type-image_theme_dark'}`}/>\r\n                <p className={`date__type ${props.isDarkTheme && 'date__type_theme_dark'}`}><span className=\"hour\">{hours < 10 ? `0${hours}` : hours}</span>:<span\r\n                    className=\"minute\">{minutes < 10 ? `0${minutes}` : minutes}</span>:<span\r\n                    className=\"second\">{seconds < 10 ? `0${seconds}` : seconds}</span>\r\n                </p>\r\n              </div>\r\n            </li>\r\n            <li className=\"container__item container__item_flex_column\">\r\n              <p className={`date__name ${props.isDarkTheme && 'date__name_theme_dark'}`}>А сегодня у нас</p>\r\n              <div className=\"date__types\">\r\n                <img src={calendar} alt=\"Календарь\" className={`date__type-image ${props.isDarkTheme && 'date__type-image_theme_dark'}`}/>\r\n                <p className={`date__type ${props.isDarkTheme && 'date__type_theme_dark'}`}><span className=\"day\">{day}</span> <span\r\n                    className=\"month\">{month} </span>\r\n                  <span className=\"year\">{year}</span>\r\n                </p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </article>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default CurrentDate;","import React from 'react';\r\n\r\nfunction FormErrors({ errorsMassage, isValid }) {\r\n  return (\r\n      <span className={`form__input-error ${!isValid ? 'form__input-error_active' : ''}`}>{errorsMassage}</span>\r\n  )\r\n}\r\n\r\nexport default FormErrors","import React from 'react';\r\nimport avatar from '../../images/avatar.jpg'\r\nimport FormErrors from \"../Popups/FormErrors\";\r\n\r\nfunction UserProfile(props) {\r\n  const [name, setName] = React.useState(''),\r\n      [isNameValid, setIsNameValid] = React.useState(false),\r\n      [nameErrorMassage, setNameErrorMassage] = React.useState(''),\r\n      [email, setEmail] = React.useState(''),\r\n      [isEmailValid, setIsEmailValid] = React.useState(false),\r\n      [emailErrorMassage, setEmailErrorMassage] = React.useState('')\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value)\r\n    handleNameValidity(e.target)\r\n  }\r\n\r\n  const handleNameValidity = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsNameValid(false);\r\n      setNameErrorMassage(input.validationMessage);\r\n    } else {\r\n      setIsNameValid(true);\r\n      setNameErrorMassage('');\r\n    }\r\n  }\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value)\r\n    handleEmailValidity(e.target)\r\n  }\r\n\r\n  const handleEmailValidity = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsEmailValid(false);\r\n      setEmailErrorMassage(input.validationMessage);\r\n    } else {\r\n      setIsEmailValid(true)\r\n      setEmailErrorMassage('')\r\n    }\r\n  }\r\n\r\n  return (\r\n      <article className={`container ${props.isThemeDark && 'container_theme_dark'} main__container`}>\r\n        <div className=\"user-profile\">\r\n          <div className=\"user-profile__menu\">\r\n            <img src={avatar} alt=\"Ваша аватарка\" className={'user-profile__avatar'}/>\r\n            <p className=\"user-profile__link\">изменить фото</p>\r\n          </div>\r\n          <div className=\"user-profile__menu\">\r\n            <form className=\"form user-profile__form\">\r\n              <div className='user-profile__form-container'>\r\n                <label htmlFor=\"\" className={`form__label ${props.isThemeDark && 'form__label_theme_dark'}`}>Ваш никнейм:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form__input\"\r\n                    minLength={3}\r\n                    required\r\n                    value={name}\r\n                    onChange={handleNameChange}\r\n                />\r\n                {nameErrorMassage.length > 0 && <FormErrors isValid={isNameValid} errorsMassage={nameErrorMassage} />}\r\n              </div>\r\n              <div className='user-profile__form-container'>\r\n                <label htmlFor=\"\" className={`form__label ${props.isThemeDark && 'form__label_theme_dark'}`}>Ваша почта:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form__input\"\r\n                    required\r\n                    value={email}\r\n                    onChange={handleEmailChange}\r\n                />\r\n                {emailErrorMassage.length > 0 && <FormErrors isValid={isEmailValid} errorsMassage={emailErrorMassage} />}\r\n              </div>\r\n              <div className=\"form__controller form__controller_arrange_closer\">\r\n                <button className=\"button form__button form__button_type_submit\">Сохранить изменения</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </article>\r\n  );\r\n}\r\n\r\nexport default UserProfile;","import React from 'react';\r\nimport {Link, Switch, Route} from 'react-router-dom';\r\nimport lineChart from \"../../images/Line chart.svg\";\r\nimport TaskList from './TaskList';\r\nimport SuccessInWeek from \"./SuccessInWeek\";\r\nimport QuotesContainer from \"./QuotesContainer\";\r\nimport CurrentDate from \"./CurrentDate\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nfunction Main(props) {\r\n  return (\r\n      <main className=\"main root__main\">\r\n        <section className=\"section main__section left-bar\">\r\n          <Switch>\r\n            <Route exact path={'/'}>\r\n              <UserProfile\r\n                  isThemeDark={props.isDarkTheme}\r\n              />\r\n            </Route>\r\n            <Route path={'/'}>\r\n              <SuccessInWeek\r\n                  tasks={props.tasks}\r\n                  isThemeDark={props.isDarkTheme}\r\n              />\r\n              {props.categories.map(category => {\r\n                return <TaskList\r\n                    key={category._id}\r\n                    category={category.categoryCode}\r\n                    tasks={props.tasks}\r\n                    onToggleCompleteStatus={props.onToggleTaskCompleteStatus}\r\n                    onTaskDelete={props.onTaskDelete}\r\n                    isDarkTheme={props.isDarkTheme}\r\n                />\r\n              })}\r\n            </Route>\r\n          </Switch>\r\n        </section>\r\n        <section className=\"section main__section\">\r\n          <CurrentDate\r\n              isDarkTheme={props.isDarkTheme}\r\n          />\r\n          <article className={`container ${props.isDarkTheme && 'container_theme_dark'} main__container`}>\r\n            <h2 className=\"container__title container__title_font-size-s\">Наблюдение</h2>\r\n            <div className=\"observation\">\r\n              <p className={`container__paragraph ${props.isDarkTheme && 'container__paragraph_theme_dark'}`}>Больше\r\n                всего задач вы <Link to=\"#\"\r\n                                     className=\"container__link\">создаете</Link> в\r\n                <span className=\"container__span\"> понедельник</span></p>\r\n              <p className={`container__paragraph ${props.isDarkTheme && 'container__paragraph_theme_dark'}`}>Больше\r\n                всего задач вы завершаете во <span\r\n                    className=\"container__span\">вторник</span>\r\n              </p>\r\n            </div>\r\n          </article>\r\n          <QuotesContainer\r\n              quote={props.quote}\r\n              isDarkTheme={props.isDarkTheme}\r\n          />\r\n          <article className={`container ${props.isDarkTheme && 'container_theme_dark'} main__container`}>\r\n            <h2 className=\"container__title container__title_font-size-s\">График успеваемости</h2>\r\n            <img src={lineChart} alt=\"Заглушка график\"\r\n                 className={`schedule ${props.isDarkTheme && 'schedule_theme_dark'}`}/>\r\n          </article>\r\n        </section>\r\n      </main>\r\n  );\r\n}\r\n\r\nexport default Main","import React from 'react';\r\n\r\nfunction Popup(props) {\r\n  const [template, setTemplate] = React.useState('Выбрать шаблон');\r\n\r\n  const handleTemplateChange = (e) => {\r\n    setTemplate(e.target.value)\r\n  }\r\n\r\n  const handleOverlayClick = (e) => {\r\n    if (e.target.classList.contains('modal')) {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n      <article onClick={handleOverlayClick} className={`modal ${props.isOpen && 'modal_active'}`}>\r\n        <div className=\"container modal__container\">\r\n          <div className=\"modal__title-container\">\r\n            <h2 className=\"container__title container__title_font-size-l\">{props.popupName}</h2>\r\n            {props.isAddTask && <select\r\n                name=\"\"\r\n                id=\"container-select\"\r\n                className=\"container__select\"\r\n                onChange={handleTemplateChange}\r\n                value={template}\r\n            >\r\n              <option value=\"Выбрать шаблон\" disabled>Выбрать шаблон</option>\r\n            </select>}\r\n            <label htmlFor=\"container-select\"/>\r\n          </div>\r\n          <form className=\"form modal__form\" name={props.formName} onSubmit={props.onSubmit} noValidate>\r\n            {props.children}\r\n            <div className=\"form__controller\">\r\n              <button onClick={props.onClose} className=\"button form__button_type_reset\" type=\"reset\">Отменить</button>\r\n              <div className=\"form__controller form__controller_arrange_closer\">\r\n                {props.isAddTask &&\r\n                <button className={`button form__button_type_save ${!props.isValid ? 'form__button_disable' : ''}`}\r\n                        type=\"button\">Сохранить как шаблон</button>}\r\n                <button className={`button form__button_type_submit ${!props.isValid ? 'form__button_disable' : ''}`}\r\n                        type=\"submit\">Добавить\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </article>\r\n  )\r\n}\r\n\r\nexport default Popup","import React from 'react'\r\nimport Popup from \"./Popup\";\r\nimport FormErrors from \"./FormErrors\";\r\n\r\nfunction AddTaskPopup(props) {\r\n  const [taskName, setTaskName] = React.useState('');\r\n  const [isNameValid, setIsNameValid] = React.useState(false);\r\n  const [nameErrorMassage, setNameErrorMassage] = React.useState('');\r\n  const [taskCategory, setTaskCategory] = React.useState('');\r\n  const [isCategoryValid, setIsCategoryValid] = React.useState(false);\r\n  const [taskPriority, setTaskPriority] = React.useState('');\r\n  const [isPriorityValid, setIsPriorityValid] = React.useState(false);\r\n  const [taskDate, setTaskDate] = React.useState('');\r\n  const [isDateValid, setIsDateValid] = React.useState(false);\r\n  const [isFormValid, setIsFormValid] = React.useState(false);\r\n\r\n  const handleNameChange = (e) => {\r\n    setTaskName(e.target.value);\r\n    handleNameValid(e.target)\r\n  }\r\n\r\n  const handleNameValid = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsNameValid(false)\r\n      setNameErrorMassage(input.validationMessage)\r\n    } else {\r\n      setIsNameValid(true)\r\n      setNameErrorMassage('')\r\n    }\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setTaskCategory(e.target.value);\r\n    handleCategoryValid(e.target)\r\n  }\r\n\r\n  const handleCategoryValid = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsCategoryValid(false)\r\n    } else {\r\n      setIsCategoryValid(true)\r\n    }\r\n  }\r\n\r\n  const handlePriorityChange = (e) => {\r\n    setTaskPriority(e.target.value);\r\n    handlePriorityValid(e.target)\r\n  }\r\n\r\n  const handlePriorityValid = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsPriorityValid(false)\r\n    } else {\r\n      setIsPriorityValid(true)\r\n    }\r\n  }\r\n\r\n  const handleDateChange = (e) => {\r\n    setTaskDate(e.target.value)\r\n    handleDateValid(e.target)\r\n  }\r\n\r\n\r\n  const handleDateValid = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsDateValid(false)\r\n    } else {\r\n      setIsDateValid(true)\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (!isNameValid || !isCategoryValid || !isDateValid || !isPriorityValid) {\r\n      setIsFormValid(false)\r\n    } else {\r\n      setIsFormValid(true)\r\n    }\r\n  }, [isNameValid, isCategoryValid, isDateValid, isPriorityValid, props.isOpen])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onTaskAdd({\r\n      title: taskName,\r\n      category: taskCategory,\r\n      isComplete: false,\r\n      date: taskDate,\r\n      priority: taskPriority,\r\n      isDeleted: false,\r\n      _id: props.tasksLength\r\n    })\r\n\r\n    props.onClose();\r\n    setTaskName('')\r\n    setTaskCategory('')\r\n    setTaskPriority('')\r\n    setTaskDate('')\r\n    setIsNameValid(false)\r\n    setIsDateValid(false)\r\n    setIsCategoryValid(false)\r\n    setIsPriorityValid(false)\r\n  }\r\n\r\n  return (\r\n      <Popup\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          isValid={isFormValid}\r\n          onSubmit={handleSubmit}\r\n          popupName={'Добавить новую задачу'}\r\n          formName={'task-creator'}\r\n          isAddTask={true}\r\n      >\r\n        <label className=\"form__label\" htmlFor=\"input-task-name\">Что нужно сделать?</label>\r\n        <input className={`form__input ${isNameValid ? 'form__input_valid' : '' }`}\r\n               type=\"text\"\r\n               id=\"input-task-name\"\r\n               name=\"taskName\"\r\n               required\r\n               maxLength=\"100\"\r\n               minLength=\"2\"\r\n               onChange={handleNameChange}\r\n               value={taskName}\r\n        />\r\n        <FormErrors isValid={isNameValid} errorsMassage={nameErrorMassage} />\r\n        <div className=\"form__group\">\r\n          <label className=\"form__label\" htmlFor=\"select-category\">Категория\r\n            <select\r\n                className={`form__input form__select ${isCategoryValid ? 'form__input_valid' : '' }`}\r\n                name=\"formSelectCategory\"\r\n                id=\"select-category\"\r\n                required\r\n                onChange={handleCategoryChange}\r\n                value={taskCategory}\r\n            >\r\n              <option value=\"\" disabled>Выбрать</option>\r\n              {props.categories.map(category => {\r\n                return <option key={category._id} value={category.categoryCode}>{category.title}</option>\r\n              })}\r\n            </select>\r\n          </label>\r\n          <label className=\"form__label\" htmlFor=\"input-task-date\">Когда\r\n            <input className={`form__input form__input_type_date ${isDateValid ? 'form__input_valid' : ''}`}\r\n                   type=\"date\"\r\n                   id=\"input-task-date\"\r\n                   name=\"taskDate\"\r\n                   required\r\n                   onChange={handleDateChange}\r\n                   value={taskDate || ''}\r\n            />\r\n          </label>\r\n          <label className=\"form__label\" htmlFor=\"select-task-priority\">Приоритет задачи\r\n            <select\r\n                className={`form__input form__select ${isPriorityValid ? 'form__input_valid' : ''}`}\r\n                name=\"formSelectPriority\"\r\n                id=\"select-task-priority\"\r\n                required\r\n                onChange={handlePriorityChange}\r\n                value={taskPriority}\r\n            >\r\n              <option className=\"form__select-option\" value=\"\" disabled>Выбрать</option>\r\n              <option className=\"form__select-option\" value=\"p1\">p1</option>\r\n              <option className=\"form__select-option\" value=\"p2\">p2</option>\r\n              <option className=\"form__select-option\" value=\"p3\">p3</option>\r\n              <option className=\"form__select-option\" value=\"p4\">p4</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </Popup>\r\n  );\r\n}\r\n\r\nexport default AddTaskPopup","import React from 'react';\r\nimport Popup from \"./Popup\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport home from \"../../images/home.svg\";\r\n\r\nfunction AddCategoryPopup(props) {\r\n  const [name, setName] = React.useState('');\r\n  const [isNameValid, setIsNameValid] = React.useState(false);\r\n  const [nameErrorMassage, setNameErrorMassage] = React.useState('');\r\n  const [isFormValid, setIsFormValid] = React.useState(false);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value)\r\n    handleNameValid(e.target)\r\n  }\r\n\r\n  const handleNameValid = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsNameValid(false)\r\n      setNameErrorMassage(input.validationMessage)\r\n    } else {\r\n      setIsNameValid(true)\r\n      setNameErrorMassage('')\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    props.categories.forEach(category => {\r\n      if (category.title.toLowerCase() === name.toLowerCase()) {\r\n        setIsNameValid(false);\r\n        setNameErrorMassage('Такая категория уже существует');\r\n      }\r\n    })\r\n  }, [name, props.categories])\r\n\r\n  React.useEffect(() => {\r\n    if (!isNameValid) {\r\n      setIsFormValid(false)\r\n    } else {\r\n      setIsFormValid(true)\r\n    }\r\n  }, [isNameValid, props.isOpen])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onCategoryAdd({\r\n      title: name,\r\n      categoryCode: name,\r\n      image: home,\r\n      _id: props.categoryLength\r\n    })\r\n\r\n    props.onClose();\r\n    setName('')\r\n  }\r\n\r\n  return (\r\n      <Popup\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          popupName={'Добавить новую категорию'}\r\n          formName={'category-creator'}\r\n          isAddTask={false}\r\n          isValid={isFormValid}\r\n          onSubmit={handleSubmit}\r\n      >\r\n        <label className=\"form__label\" htmlFor=\"input-task-name\">Назовите новую категорию</label>\r\n        <input className={`form__input ${isNameValid ? 'form__input_valid' : '' }`}\r\n               type=\"text\"\r\n               id=\"input-task-name\"\r\n               name=\"taskName\"\r\n               required\r\n               maxLength=\"30\"\r\n               minLength=\"2\"\r\n               onChange={handleNameChange}\r\n               value={name || ''}\r\n        />\r\n        <FormErrors isValid={isNameValid} errorsMassage={nameErrorMassage} />\r\n      </Popup>\r\n  );\r\n}\r\n\r\nexport default AddCategoryPopup","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({component: Component, ...props}) {\r\n  return (\r\n      <Route>\r\n        {() =>\r\n            props.isLoggedIn ? <Component {...props} /> : <Redirect to='/sign-in' />\r\n        }\r\n      </Route>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute ","import React from 'react';\r\nimport FormErrors from \"../Popups/FormErrors\";\r\n\r\nfunction SignPage(props) {\r\n  const [email, setEmail] = React.useState(''),\r\n      [isEmailValid, setIsEmailValid] = React.useState(false),\r\n      [emailErrorMassage, setEmailErrorMassage] = React.useState(''),\r\n      [password, setPassword] = React.useState(''),\r\n      [isPasswordValid, setIsPasswordValid] = React.useState(false),\r\n      [passwordErrorMassage, setPasswordErrorMassage] = React.useState(''),\r\n      [isFormValid, setIsFormValid] = React.useState(false);\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n    handleEmailValidity(e.target)\r\n  }\r\n\r\n  const handleEmailValidity = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsEmailValid(false);\r\n      setEmailErrorMassage(input.validationMessage);\r\n    } else {\r\n      setIsEmailValid(true);\r\n      setEmailErrorMassage('');\r\n    }\r\n  }\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value)\r\n    handlePasswordValidity(e.target)\r\n  }\r\n\r\n  const handlePasswordValidity = (input) => {\r\n    if (!input.validity.valid) {\r\n      setIsPasswordValid(false);\r\n      setPasswordErrorMassage(input.validationMessage);\r\n    } else {\r\n      setIsPasswordValid(true);\r\n      setPasswordErrorMassage('');\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (isEmailValid && isPasswordValid) {\r\n      setIsFormValid(true);\r\n    } else {\r\n      setIsFormValid(false)\r\n    }\r\n  }, [isEmailValid, isPasswordValid])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setIsFormValid(false)\r\n    setPassword('')\r\n    setEmail('')\r\n    props.onSubmit()\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <h1 className=\"auth__title\">{props.title}</h1>\r\n        <form noValidate className=\"auth__form form\" name={props.formName} onSubmit={handleSubmit}>\r\n          <input\r\n              type=\"email\"\r\n              className={'form__input'}\r\n              name={'email'}\r\n              placeholder={'Email'}\r\n              required\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n          />\r\n          {emailErrorMassage.length > 0 && <FormErrors isValid={isEmailValid} errorsMassage={emailErrorMassage} />}\r\n          <input\r\n              type=\"password\"\r\n              className={'form__input'}\r\n              name={'password'}\r\n              placeholder={'Пароль'}\r\n              required\r\n              minLength={6}\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n          />\r\n          {passwordErrorMassage.length > 0 && <FormErrors isValid={isPasswordValid} errorsMassage={passwordErrorMassage} />}\r\n          <button\r\n              type={'submit'}\r\n              className={`button form__button ${isFormValid && 'form__button_type_submit'}`}\r\n          >{props.buttonText}</button>\r\n        </form>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default SignPage","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport SignPage from \"./SignPage\";\r\n\r\nfunction SignIn(props) {\r\n  return (\r\n      <section className='auth'>\r\n        <article className=\"auth__main\">\r\n          <SignPage\r\n            title={'Вход в аккаунт'}\r\n            formName={'sign-in'}\r\n            buttonText={'Войти'}\r\n            onSubmit={props.onSubmit}\r\n          />\r\n          <p className=\"auth__paragraph\">Еще нет аккаунта? <Link to={'/sign-up'} className={'auth__link'}>Регистрация</Link></p>\r\n        </article>\r\n        <article className=\"footer auth__footer\">\r\n          <p className=\"footer__paragraph\">&#169;</p>\r\n          <p className=\"footer__paragraph\">copyright 2021</p>\r\n          <p className=\"footer__paragraph footer__paragraph_type_underline\">Политика конфиденциальности</p>\r\n        </article>\r\n      </section>\r\n  );\r\n}\r\n\r\nexport default SignIn","import React from 'react';\r\nimport SignPage from \"./SignPage\";\r\n\r\nfunction SignUp(props) {\r\n  return (\r\n      <section className='auth'>\r\n        <article className=\"auth__main\">\r\n          <SignPage\r\n              title={'Регистрация на сайте'}\r\n              formName={'sign-up'}\r\n              buttonText={'Зарегистрироваться'}\r\n              onSubmit={props.onSubmit}\r\n          />\r\n        </article>\r\n        <article className=\"footer auth__footer\">\r\n          <p className=\"footer__paragraph\">&#169;</p>\r\n          <p className=\"footer__paragraph\">copyright 2021</p>\r\n          <p className=\"footer__paragraph footer__paragraph_type_underline\">Политика конфиденциальности</p>\r\n        </article>\r\n      </section>\r\n  );\r\n}\r\n\r\nexport default SignUp","import React from \"react\";\r\nimport {Route, Switch, useHistory} from 'react-router-dom'\r\nimport { prependCategory, prependTasks } from \"../utils/constans\";\r\nimport { qutesApi } from \"../utils/quotesApi\";\r\nimport Header from \"./Header\";\r\nimport Nav from \"./Nav/Nav\";\r\nimport Main from \"./Main/Main\";\r\nimport AddTaskPopup from \"./Popups/AddTaskPopup\";\r\nimport AddCategoryPopup from \"./Popups/AddCategoryPopup\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport SignIn from \"./Sign/SignIn\";\r\nimport SignUp from \"./Sign/SignUp\";\r\n\r\nfunction App() {\r\n  const [categories, setCategories] = React.useState([]);\r\n  const [tasks, setTasks] = React.useState([]);\r\n  const [quote, setQuote] = React.useState({})\r\n  const [isAddTaskOpen, setIsAddTaskOpen] = React.useState(false);\r\n  const [isAddCategoryOpen, setIsCategoryTaskOpen] = React.useState(false);\r\n  const [isDarkTheme, setIsDarkTheme] = React.useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\r\n\r\n  const history = useHistory()\r\n\r\n  React.useEffect(() => {\r\n    setCategories(prependCategory);\r\n    setTasks(prependTasks);\r\n    qutesApi.getQuoteOfDay()\r\n        .then(data => {\r\n          setQuote(data.quote)\r\n        })\r\n        .catch(err => {\r\n          console.error(err)\r\n        })\r\n  }, []);\r\n\r\n  const handleToggleTaskCompleteStatus = (taskId) => {\r\n    setTasks([\r\n        ...tasks.map(task =>\r\n            task._id === taskId ? {...task, isComplete: !task.isComplete} : {...task}\r\n        )\r\n    ])\r\n  }\r\n\r\n  const handleTaskDelete = (taskId) => {\r\n    setTasks([\r\n        ...tasks.map(task =>\r\n          task._id === taskId ? {...task, isDeleted: !task.isDeleted} : {...task}\r\n        )\r\n    ])\r\n  }\r\n\r\n  const closeAllPopups = () => {\r\n    setIsAddTaskOpen(false)\r\n    setIsCategoryTaskOpen(false)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const closeByEscape = (e) => {\r\n      if (e.key === 'Escape') {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', closeByEscape)\r\n\r\n    return () => document.removeEventListener('keydown', closeByEscape)\r\n  })\r\n\r\n  const openAddTaskPopup = () => {\r\n    setIsAddTaskOpen(true);\r\n  }\r\n\r\n  const openAddCategoryPopup = () => {\r\n    setIsCategoryTaskOpen(true);\r\n  }\r\n\r\n  const handleTaskAdd = (newTask) => {\r\n    setTasks([newTask, ...tasks])\r\n  }\r\n\r\n  const handleCategoryAdd = (newCategory) => {\r\n    setCategories([...categories, newCategory])\r\n  }\r\n\r\n  const handleThemeToggle = () => {\r\n    setIsDarkTheme(!isDarkTheme);\r\n    document.body.classList.toggle('body_theme_dark');\r\n    localStorage.setItem('theme', !isDarkTheme)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem('theme') === 'true') {\r\n      setIsDarkTheme(true);\r\n      document.body.classList.add('body_theme_dark');\r\n    } else {\r\n      setIsDarkTheme(false)\r\n      document.body.classList.remove('body_theme_dark');\r\n    }\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem('isLoggedIn') === 'true') {\r\n      setIsLoggedIn(true);\r\n      history.push('/')\r\n    } else {\r\n      setIsLoggedIn(false)\r\n      history.push('/sign-in')\r\n    }\r\n  }, [history, isLoggedIn])\r\n\r\n  const handleLoggedIn = () => {\r\n    localStorage.setItem('isLoggedIn', 'true')\r\n    setIsLoggedIn(true)\r\n  }\r\n\r\n  return (\r\n      <div className={`root ${isDarkTheme && 'root_theme_dark'}`}>\r\n        <Header\r\n            onOpenAddTaskPopup={openAddTaskPopup}\r\n            onThemeToggle={handleThemeToggle}\r\n            isDarkTheme={isDarkTheme}\r\n            isLoggedIn={isLoggedIn}\r\n        />\r\n        <Nav\r\n            categories={categories}\r\n            onOpenAddCategoryPopup={openAddCategoryPopup}\r\n            isDarkTheme={isDarkTheme}\r\n            isLoggedIn={isLoggedIn}\r\n        />\r\n        <Switch>\r\n        <Route path='/sign-in'>\r\n          <SignIn\r\n              onSubmit={handleLoggedIn}\r\n          />\r\n        </Route>\r\n          <Route path='/sign-up'>\r\n            <SignUp\r\n                onSubmit={handleLoggedIn}\r\n            />\r\n          </Route>\r\n          <ProtectedRoute\r\n              component={Main}\r\n              path='/'\r\n              isLoggedIn={isLoggedIn}\r\n              tasks={tasks}\r\n              categories={categories}\r\n              onToggleTaskCompleteStatus={handleToggleTaskCompleteStatus}\r\n              onTaskDelete={handleTaskDelete}\r\n              quote={quote}\r\n              isDarkTheme={isDarkTheme}\r\n          />\r\n        </Switch>\r\n        <AddTaskPopup\r\n            isOpen={isAddTaskOpen}\r\n            onClose={closeAllPopups}\r\n            categories={categories}\r\n            onTaskAdd={handleTaskAdd}\r\n            tasksLength={tasks.length}\r\n        />\r\n        <AddCategoryPopup\r\n            isOpen={isAddCategoryOpen}\r\n            onClose={closeAllPopups}\r\n            onCategoryAdd={handleCategoryAdd}\r\n            categoryLength={categories.length}\r\n            categories={categories}\r\n        />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App/>\r\n      </BrowserRouter>\r\n    </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}